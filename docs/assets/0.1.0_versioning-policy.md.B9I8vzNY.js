import{_ as a,c as n,a3 as i,o as r}from"./chunks/framework.Br0sn5vz.js";const m=JSON.parse('{"title":"Versioning policy","description":"","frontmatter":{},"headers":[],"relativePath":"0.1.0/versioning-policy.md","filePath":"0.1.0/versioning-policy.md"}'),t={name:"0.1.0/versioning-policy.md"};function o(s,e,c,l,h,p){return r(),n("div",null,e[0]||(e[0]=[i('<h1 id="versioning-policy" tabindex="-1">Versioning policy <a class="header-anchor" href="#versioning-policy" aria-label="Permalink to &quot;Versioning policy&quot;">​</a></h1><p>Here is what you need to know about the maintenance and evolution of versions for this package.</p><h2 id="before-1-0-0" tabindex="-1">Before 1.0.0 <a class="header-anchor" href="#before-1-0-0" aria-label="Permalink to &quot;Before 1.0.0&quot;">​</a></h2><p>Breaking changes may occur in any minor version increment (0.x.0).</p><p>This follows the <a href="https://semver.org/lang/fr/" target="_blank" rel="noreferrer">SemVer</a> specification for initial development, which states that anything may change at any time during this phase.</p><p>Read the <a href="/mantis/0.1.0/upgrade.html">upgrade instructions</a> for details on required changes between versions.</p><h2 id="after-1-0-0" tabindex="-1">After 1.0.0 <a class="header-anchor" href="#after-1-0-0" aria-label="Permalink to &quot;After 1.0.0&quot;">​</a></h2><h3 id="one-breaking-change-policy" tabindex="-1">One Breaking Change Policy <a class="header-anchor" href="#one-breaking-change-policy" aria-label="Permalink to &quot;One Breaking Change Policy&quot;">​</a></h3><p>Each major version increment introduces exactly one breaking change. This deliberate constraint makes upgrades more predictable and manageable.</p><p>When an upgrade causes an issue, you can quickly identify which change is responsible.</p><p>This approach also enables clear communication about what changed and why, as each major version has a single, well-defined purpose.</p><h3 id="edge-maintenance-policy" tabindex="-1">Edge maintenance policy <a class="header-anchor" href="#edge-maintenance-policy" aria-label="Permalink to &quot;Edge maintenance policy&quot;">​</a></h3><p>Edge maintenance offers several benefits aligned with modern development practices.</p><h4 id="technical-perspective" tabindex="-1">Technical perspective <a class="header-anchor" href="#technical-perspective" aria-label="Permalink to &quot;Technical perspective&quot;">​</a></h4><p>Your application receives security fixes faster since there&#39;s only one version to maintain.</p><p>The community naturally gravitates toward the latest version, creating a more unified ecosystem where everyone benefits from and contributes to the same codebase.</p><h4 id="development-perspective" tabindex="-1">Development perspective <a class="header-anchor" href="#development-perspective" aria-label="Permalink to &quot;Development perspective&quot;">​</a></h4><p>The development experience becomes more pleasant as you learn new features gradually rather than being overwhelmed by many changes at once. Each upgrade brings a small, digestible change that you can understand and implement at your own pace.</p><p>This approach reduces technical debt since you&#39;re never too far behind the latest version.</p><h4 id="maintenance-considerations" tabindex="-1">Maintenance considerations <a class="header-anchor" href="#maintenance-considerations" aria-label="Permalink to &quot;Maintenance considerations&quot;">​</a></h4><p>Your team needs to actively monitor changes through social networks or release feeds.</p><p>Your development process must account for regular maintenance windows to handle updates.</p><p>While updates may be more frequent, each one is smaller and more manageable than traditional large-scale version migrations.</p><p>We believe these trade-offs create a more sustainable and developer-friendly ecosystem. By keeping changes small and focused, we can evolve the framework in response to real-world needs while maintaining stability and predictability.</p>',24)]))}const u=a(t,[["render",o]]);export{m as __pageData,u as default};
